name: Scheduled Stock Screening

on:
  schedule:
    # Run every weekday at 6 PM UTC (after US market close)
    - cron: '0 18 * * 1-5'
  workflow_dispatch:  # Allow manual trigger

jobs:
  screen-stocks:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run stock screening
      env:
        FMP_API_KEY: ${{ secrets.FMP_API_KEY }}
      run: |
        python stock_screener.py --profile quality --output-dir ./results
    
    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
        name: screening-results-${{ github.run_number }}
        path: |
          ./results/*.xlsx
          ./results/*.txt
          ./results/*.csv
          ./results/*.json
          run_metadata.json
        retention-days: 30
    
    - name: Create issue with results summary
      if: success()
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const metadata = JSON.parse(fs.readFileSync('run_metadata.json', 'utf8'));
          
          const issueBody = `## Stock Screening Results - ${new Date().toISOString().split('T')[0]}
          
          ### Summary
          - Total stocks screened: ${metadata.data_coverage.total_stocks}
          - Qualifying stocks: ${metadata.results.qualifying_stocks}
          - Execution time: ${metadata.performance.duration_seconds.toFixed(2)} seconds
          
          ### Top 5 Stocks
          ${metadata.results.top_stocks.slice(0, 5).map((stock, i) => 
            `${i + 1}. **${stock.symbol}** - ${stock.company} (Score: ${stock.score.toFixed(3)})`
          ).join('\n')}
          
          ### Files
          Results have been uploaded as artifacts to this workflow run.
          
          [View Workflow Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          `;
          
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Stock Screening Results - ${new Date().toISOString().split('T')[0]}`,
            body: issueBody,
            labels: ['screening-results', 'automated']
          });
      continue-on-error: true